// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebMieow.Data;

#nullable disable

namespace WebMieow.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250729133456_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebMieow.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("WebMieow.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ServiceType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 100000,
                            Code = "STEAM100_1",
                            IsUsed = false,
                            ServiceType = "Steam"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 100000,
                            Code = "STEAM100_2",
                            IsUsed = false,
                            ServiceType = "Steam"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 200000,
                            Code = "STEAM200_1",
                            IsUsed = false,
                            ServiceType = "Steam"
                        },
                        new
                        {
                            Id = 4,
                            Amount = 200000,
                            Code = "STEAM200_2",
                            IsUsed = false,
                            ServiceType = "Steam"
                        },
                        new
                        {
                            Id = 5,
                            Amount = 500000,
                            Code = "STEAM500_1",
                            IsUsed = false,
                            ServiceType = "Steam"
                        },
                        new
                        {
                            Id = 6,
                            Amount = 500000,
                            Code = "STEAM500_2",
                            IsUsed = false,
                            ServiceType = "Steam"
                        },
                        new
                        {
                            Id = 7,
                            Amount = 150000,
                            Code = "NETFLIX150_1",
                            IsUsed = false,
                            ServiceType = "Netflix"
                        },
                        new
                        {
                            Id = 8,
                            Amount = 150000,
                            Code = "NETFLIX150_2",
                            IsUsed = false,
                            ServiceType = "Netflix"
                        },
                        new
                        {
                            Id = 9,
                            Amount = 300000,
                            Code = "NETFLIX300_1",
                            IsUsed = false,
                            ServiceType = "Netflix"
                        },
                        new
                        {
                            Id = 10,
                            Amount = 300000,
                            Code = "NETFLIX300_2",
                            IsUsed = false,
                            ServiceType = "Netflix"
                        },
                        new
                        {
                            Id = 11,
                            Amount = 50000,
                            Code = "ZING050_1",
                            IsUsed = false,
                            ServiceType = "Zing"
                        },
                        new
                        {
                            Id = 12,
                            Amount = 50000,
                            Code = "ZING050_2",
                            IsUsed = false,
                            ServiceType = "Zing"
                        },
                        new
                        {
                            Id = 13,
                            Amount = 100000,
                            Code = "ZING100_1",
                            IsUsed = false,
                            ServiceType = "Zing"
                        },
                        new
                        {
                            Id = 14,
                            Amount = 100000,
                            Code = "ZING100_2",
                            IsUsed = false,
                            ServiceType = "Zing"
                        },
                        new
                        {
                            Id = 15,
                            Amount = 20000,
                            Code = "GARENA020_1",
                            IsUsed = false,
                            ServiceType = "Garena"
                        },
                        new
                        {
                            Id = 16,
                            Amount = 20000,
                            Code = "GARENA020_2",
                            IsUsed = false,
                            ServiceType = "Garena"
                        },
                        new
                        {
                            Id = 17,
                            Amount = 50000,
                            Code = "GARENA050_1",
                            IsUsed = false,
                            ServiceType = "Garena"
                        },
                        new
                        {
                            Id = 18,
                            Amount = 50000,
                            Code = "GARENA050_2",
                            IsUsed = false,
                            ServiceType = "Garena"
                        },
                        new
                        {
                            Id = 19,
                            Amount = 100000,
                            Code = "GARENA100_1",
                            IsUsed = false,
                            ServiceType = "Garena"
                        },
                        new
                        {
                            Id = 20,
                            Amount = 100000,
                            Code = "GARENA100_2",
                            IsUsed = false,
                            ServiceType = "Garena"
                        },
                        new
                        {
                            Id = 21,
                            Amount = 100000,
                            Code = "GOOGLEPLAY100_1",
                            IsUsed = false,
                            ServiceType = "Google Play"
                        },
                        new
                        {
                            Id = 22,
                            Amount = 100000,
                            Code = "GOOGLEPLAY100_2",
                            IsUsed = false,
                            ServiceType = "Google Play"
                        },
                        new
                        {
                            Id = 23,
                            Amount = 200000,
                            Code = "GOOGLEPLAY200_1",
                            IsUsed = false,
                            ServiceType = "Google Play"
                        },
                        new
                        {
                            Id = 24,
                            Amount = 200000,
                            Code = "GOOGLEPLAY200_2",
                            IsUsed = false,
                            ServiceType = "Google Play"
                        },
                        new
                        {
                            Id = 25,
                            Amount = 59000,
                            Code = "SPOTIFY059_1",
                            IsUsed = false,
                            ServiceType = "Spotify"
                        },
                        new
                        {
                            Id = 26,
                            Amount = 59000,
                            Code = "SPOTIFY059_2",
                            IsUsed = false,
                            ServiceType = "Spotify"
                        },
                        new
                        {
                            Id = 27,
                            Amount = 129000,
                            Code = "SPOTIFY129_1",
                            IsUsed = false,
                            ServiceType = "Spotify"
                        },
                        new
                        {
                            Id = 28,
                            Amount = 129000,
                            Code = "SPOTIFY129_2",
                            IsUsed = false,
                            ServiceType = "Spotify"
                        });
                });

            modelBuilder.Entity("WebMieow.Models.CardStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("OrderCode")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("CardStock");
                });

            modelBuilder.Entity("WebMieow.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Card")
                        .HasColumnType("longtext");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OrderCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Plan")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ServiceType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("OrderId");

                    b.HasIndex("AccountId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WebMieow.Models.Order", b =>
                {
                    b.HasOne("WebMieow.Models.Account", "Account")
                        .WithMany("Orders")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("WebMieow.Models.Account", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
