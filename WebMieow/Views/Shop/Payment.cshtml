@model WebMieow.Models.PaymentViewModel

@{
    Layout = "~/Views/Shared/_LayoutShop.cshtml";
    ViewData["Title"] = "Thanh Toán";
}

<style>
    * {
        box-sizing: border-box;
        font-family: Arial, sans-serif;
    }

    body {
        background: #f8f9fa;
        margin: 0;
        padding: 20px;
        color: #333;
    }

    h2 {
        text-align: center;
        color: #007bff;
        margin-bottom: 30px;
    }

    /* .container {
        display: flex;
        justify-content: center;
        flex-wrap: wrap;
        gap: 30px;
        max-width: 1000px;
        margin: auto;
    } */

    .payment-wrapper {
        display: flex;
        justify-content: center;
        flex-wrap: wrap;
        gap: 30px;
        max-width: 1000px;
        margin: auto;
    }

    .box {
        background: #fff;
        padding: 25px 20px;
        border-radius: 10px;
        box-shadow: 0 0 12px rgba(0, 0, 0, 0.08);
        width: 100%;
        max-width: 420px; /* responsive hơn */
    }


        .box h3 {
            margin-bottom: 20px;
            font-size: 18px;
            border-bottom: 1px solid #ccc;
            padding-bottom: 8px;
        }

    .info p {
        margin: 8px 0;
    }

    .info strong {
        color: #000;
    }

    .info .highlight {
        color: red;
        font-weight: bold;
    }

    .qr img {
        max-width: 100%;
        height: auto;
    }

    .note {
        text-align: center;
        margin-top: 30px;
        font-size: 14px;
        color: #555;
    }

        .note a {
            color: #007bff;
            text-decoration: none;
        }

            .note a:hover {
                text-decoration: underline;
            }
</style>

<div class="payment-wrapper my-4">
    <div class="row justify-content-center">
        <!-- Thông tin đơn hàng -->
        <div class="col-md-6 col-lg-5 mb-4">
            <div class="p-4 shadow-sm bg-white rounded">
                <h5 class="border-bottom pb-2 mb-3">Thông tin đơn hàng</h5>
                <p>Email/SDT: <strong>@Model.Email</strong></p>
                <p>Gói mua: <strong>@Model.Plan</strong></p>
                <p>Số tiền: <strong>@Model.Amount.ToString("N0") đ</strong></p>
                <p>Nội dung CK: <strong class="text-danger">@Model.Code</strong></p>
                <p>Đơn hàng hết hạn sau: <strong class="text-danger" id="timer">10:00</strong></p>
                <p class="text-muted small">Lưu ý: nếu giao dịch ghi sai nội dung chuyển khoản nhưng đúng Email/SDT, hãy liên hệ admin hỗ trợ.</p>
                <p class="text-muted small">Khi chuyển khoản thành công, bấm vào Tôi đã chuyển khoản, rồi vào profile xem mã nhé.</p>
                <button class="btn btn-outline-dark w-100 mt-2" id="btnCheck">Tôi đã chuyển khoản</button>

                <input type="hidden" id="contactInput" value="@Model.Email" />
                <span id="orderCode" style="display:none;">@Model.Code</span>
                <div id="cardCode" class="mt-3"></div>
            </div>
        </div>

        <!-- QR thanh toán -->
        <div class="col-md-6 col-lg-5 mb-4">
            <div class="p-4 shadow-sm bg-white rounded text-center">
                <h5 class="border-bottom pb-2 mb-3">Quét mã QR để thanh toán</h5>
                <img src="~/img/pay.jpg" alt="QR Thanh toán" class="img-fluid rounded mb-2" />
                <p class="text-muted small">Dùng app MB Bank, Momo, ZaloPay, VCB, TPBank...</p>
            </div>
        </div>
    </div>

    <div class="text-center text-muted mt-4 small">
        Nếu quá 5 phút không nhận được mã, vui lòng liên hệ<br />
        <a href="https://facebook.com/hungng.0503" target="_blank">Facebook Hùng</a> | Zalo: 0888941220
    </div>
</div>


@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const btn = document.getElementById("btnCheck");
            if (!btn) return;

            btn.addEventListener("click", () => {
                const contact = document.getElementById("contactInput")?.value.trim();
                const orderCode = document.getElementById("orderCode")?.textContent.trim();

                if (!contact || !orderCode) {
                    alert("Vui lòng nhập đầy đủ thông tin.");
                    return;
                }

                fetch(`/Shop/GetOrder?contact=${encodeURIComponent(contact)}&orderCode=${encodeURIComponent(orderCode)}`)
                    .then(res => {
                        if (!res.ok) throw new Error("Không tìm thấy đơn");
                        return res.json();
                    })
                    .then(order => {
                        console.log("Đơn hàng tìm thấy:", order);
                        alert(`Tình trạng đơn: ${order.status}`);
                        // hoặc hiển thị chi tiết thẻ ở đây
                    })
                    .catch(err => {
                        console.error(err);
                        alert("Không thể kiểm tra đơn hàng. Thử lại sau.");
                    });
            });
        });

        // Countdown
        let time = 600;
        function updateTimer() {
            let minutes = Math.floor(time / 60);
            let seconds = time % 60;
            document.getElementById('timer').innerText =
                (minutes < 10 ? '0' : '') + minutes + ':' + (seconds < 10 ? '0' : '') + seconds;
            if (time > 0) time--;
        }
        setInterval(updateTimer, 1000);
        updateTimer();
    </script>
}
